#===================== DO NOT EDIT THIS BLOCK =================================#
import collections
from collections import namedtuple

PASS = "PASS"
TEXT_FORMAT = "text"  # question type when expected answer is a str, int, float, or bool
TEXT_FORMAT_NAMEDTUPLE = "text namedtuple"  # question type when expected answer is a namedtuple
TEXT_FORMAT_UNORDERED_LIST = "text list_unordered"  # question type when the expected answer is a list where the order does *not* matter
TEXT_FORMAT_ORDERED_LIST = "text list_ordered"  # question type when the expected answer is a list where the order does matter
TEXT_FORMAT_ORDERED_LIST_NAMEDTUPLE = "text list_ordered namedtuple"  # question type when the expected answer is a list of namedtuples where the order does matter
TEXT_FORMAT_SPECIAL_ORDERED_LIST = "text list_special_ordered"  # question type when the expected answer is a list where order does matter, but with possible ties. All tied elements are put in a list, where internal order does not matter.
TEXT_FORMAT_DICT = "text dict"  # question type when the expected answer is a dictionary
TEXT_FORMAT_LIST_DICTS_ORDERED = "text list_dicts_ordered"  # question type when the expected answer is a list of dicts where the order does matter
PNG_FORMAT = "png"  # use when the expected answer is an image
HTML_FORMAT = "html"
FILE_FORMAT = "file"
FILE_JSON_FORMAT = "file json"

Question = collections.namedtuple("Question", ["number", "weight", "format"])
#===================== DO NOT EDIT THIS BLOCK =================================#


# EDIT THIS
REQUIRED_FILES = ['small_mapping.csv', 'small_movies.csv', 'mapping.csv', 'movies.csv', 'small_movies_altered.csv']


# EDIT THIS
questions = [
    Question(number=1, weight=1, format=TEXT_FORMAT_DICT),
    Question(number=2, weight=1, format=TEXT_FORMAT),
    Question(number=3, weight=1, format=TEXT_FORMAT_UNORDERED_LIST),
    Question(number=4, weight=1, format=TEXT_FORMAT_UNORDERED_LIST),
    Question(number=5, weight=1, format=TEXT_FORMAT_LIST_DICTS_ORDERED),
    Question(number=6, weight=1, format=TEXT_FORMAT),
    Question(number=7, weight=1, format=TEXT_FORMAT),
    Question(number=8, weight=1, format=TEXT_FORMAT_LIST_DICTS_ORDERED),
    Question(number=9, weight=1, format=TEXT_FORMAT),
    Question(number=10, weight=1, format=TEXT_FORMAT_ORDERED_LIST),
    Question(number=11, weight=1, format=TEXT_FORMAT_ORDERED_LIST),
    Question(number=12, weight=1, format=TEXT_FORMAT_LIST_DICTS_ORDERED),
    Question(number=13, weight=1, format=TEXT_FORMAT_LIST_DICTS_ORDERED),
    Question(number=14, weight=1, format=TEXT_FORMAT_LIST_DICTS_ORDERED),
    Question(number=15, weight=1, format=TEXT_FORMAT_UNORDERED_LIST),
    Question(number=16, weight=1, format=TEXT_FORMAT_UNORDERED_LIST),
    Question(number=17, weight=1, format=TEXT_FORMAT),
    Question(number=18, weight=1, format=TEXT_FORMAT),
    Question(number=19, weight=1, format=TEXT_FORMAT_UNORDERED_LIST),
    Question(number=20, weight=1, format=TEXT_FORMAT),
]

# EDIT THIS
expected_json = {
    "1": {'tt3104988':'Crazy Rich Asians',
            'nm0160840': 'Jon M. Chu',
            'nm2090422': 'Constance Wu',
            'nm6525901': 'Henry Golding',
            'nm0000706': 'Michelle Yeoh',
            'nm2110418': 'Gemma Chan',
            'nm0523734': 'Lisa Lu',
            'tt4846340': 'Hidden Figures',
            'nm0577647': 'Theodore Melfi',
            'nm0378245': 'Taraji P. Henson',
            'nm0818055': 'Octavia Spencer',
            'nm1847117': 'Janelle Monáe'},
    "2": "Henry Golding",
    "3": ['Jon M. Chu',
            'Constance Wu',
            'Henry Golding',
            'Michelle Yeoh',
            'Gemma Chan',
            'Lisa Lu',
            'Theodore Melfi',
            'Taraji P. Henson',
            'Octavia Spencer',
            'Janelle Monáe'],
    "4": ['nm0378245'],
    "5": [{'title': 'tt3104988',
              'year': 2018,
              'genres': ['Comedy', 'Drama', 'Romance'],
              'duration': 120,
              'directors': ['nm0160840'],
              'actors': ['nm2090422', 'nm6525901', 'nm0000706', 'nm2110418', 'nm0523734'],
              'rating': 6.9},
             {'title': 'tt4846340',
              'year': 2016,
              'genres': ['Biography', 'Drama', 'History'],
              'duration': 127,
              'directors': ['nm0577647'],
              'actors': ['nm0378245', 'nm0818055', 'nm1847117'],
              'rating': 7.8}],
    "6": 5,
    "7": 'nm2090422',
    "8": [{'title': 'Crazy Rich Asians',
           'year': 2018,
           'genres': ['Comedy', 'Drama', 'Romance'],
           'duration': 120,
           'directors': ['Jon M. Chu'],
           'actors': ['Constance Wu',
            'Henry Golding',
            'Michelle Yeoh',
            'Gemma Chan',
            'Lisa Lu'],
            'rating': 6.9},
          {'title': 'Hidden Figures',
           'year': 2016,
           'genres': ['Biography', 'Drama', 'History'],
           'duration': 127,
           'directors': ['Theodore Melfi'],
           'actors': ['Taraji P. Henson', 'Octavia Spencer', 'Janelle Monáe'],
           'rating': 7.8}],
    "9": 'Hidden Figures',
    "10": ['Constance Wu', 'Henry Golding', 'Michelle Yeoh', 'Gemma Chan', 'Lisa Lu'],
    "11": ['Theodore Melfi'],
    "12": 33102,
    "13": [{'title': 'Battle Bots',
            'year': 2018,
            'genres': ['Action', 'Adventure', 'Sci-Fi'],
            'duration': 67,
            'directors': ['Mark Polonia'],
            'actors': ['Danielle Donahue', 'Jeff Kirkendall', 'Marie DeLorenzo'],
            'rating': 1.9},
            {'title': 'Inescapable',
            'year': 2003,
            'genres': ['Drama'],
            'duration': 82,
            'directors': ['Helen Lesnick'],
            'actors': ['Natalie Anderson', 'Tanna Frederick', 'Athena Demos'],
            'rating': 4.2}],
    "14": [{'title': 'Lady Bird',
            'year': 2017,
            'genres': ['Comedy', 'Drama'],
            'duration': 94,
            'directors': ['Greta Gerwig'],
            'actors': ['Saoirse Ronan', 'Laurie Metcalf'],
            'rating': 7.4},
            {'title': 'Little Women',
            'year': 2019,
            'genres': ['Drama', 'Romance'],
            'duration': 135,
            'directors': ['Greta Gerwig'],
            'actors': ['Saoirse Ronan', 'Emma Watson', 'Florence Pugh', 'Eliza Scanlen'],
            'rating': 7.8},
            {'title': 'Nights and Weekends',
            'year': 2008,
            'genres': ['Drama', 'Romance'],
            'duration': 80,
            'directors': ['Greta Gerwig', 'Joe Swanberg'],
            'actors': ['Joe Swanberg', 'Jay Duplass', 'Elizabeth Donius'],
            'rating': 6.1}],
    "15": ['Action',
          'Romance',
          'Western',
          'Thriller',
          'Biography',
          'Adventure',
          'Mystery',
          'Comedy',
          'Crime',
          'Sci-Fi',
          'Drama'],
    "16": ['Action',
          'Horror',
          'Sci-Fi',
          'Crime',
          'Thriller',
          'Comedy',
          'Drama',
          'Romance',
          'History',
          'Adventure',
          'Western',
          'Family',
          'Fantasy',
          'War',
          'Sport',
          'Biography',
          'Mystery',
          'Film-Noir',
          'Music',
          'Animation',
          'Musical',
          'Reality-TV',
          'Documentary',
          'News'],
    "17": 11130,
    "18": 'Hopeful Notes',
    "19": ['Drama',
          'Horror',
          'Sci-Fi',
          'Biography',
          'Romance',
          'Thriller',
          'Action',
          'Crime',
          'Comedy',
          'Adventure',
          'Family',
          'Fantasy'],
    "20": "Music"
}
